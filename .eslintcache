[{"/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/index.js":"1","/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/App.js":"2","/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/reportWebVitals.js":"3","/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/Table.js":"4","/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/LineGraph.js":"5","/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/InfoBox.js":"6","/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/Map.js":"7","/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/util.js":"8"},{"size":500,"mtime":1621358523989,"results":"9","hashOfConfig":"10"},{"size":4088,"mtime":1621588218201,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1621358523989,"results":"12","hashOfConfig":"10"},{"size":401,"mtime":1621511144626,"results":"13","hashOfConfig":"10"},{"size":2285,"mtime":1621587336309,"results":"14","hashOfConfig":"10"},{"size":912,"mtime":1621581885581,"results":"15","hashOfConfig":"10"},{"size":886,"mtime":1621582607675,"results":"16","hashOfConfig":"10"},{"size":1886,"mtime":1621511637305,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"e9zgof",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/index.js",[],["37","38"],"/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/App.js",["39","40"],"import {Card, CardContent, FormControl, MenuItem, Select} from '@material-ui/core';\nimport {useEffect, useState} from 'react';\nimport './App.css';\nimport InfoBox from './InfoBox'\nimport LineGraph from './LineGraph';\nimport Map from './Map'\nimport Table from './Table'\nimport {prettyPrintStat, sortData} from './util';\nimport \"leaflet/dist/leaflet.css\"\n//https://corona.lmao.ninja/v3/covid-19/countries\nfunction App() {\n  const [countries,setcountries]=useState([])\n  const [country,setcountry]=useState(['Worldwide']);\n  const [countryInfo,setCountryInfo]=useState([]);\n  const [tableData,setTableData]=useState([]);\n  const [mapCenter,setMapCenter]=useState([20,77])\n  const [mapZoom,setMapZoom]=useState(3)\n  const [mapCountries,setMapCountries]=useState([]);\n  const [casesType,setCasesType]=useState(\"cases\");\n useEffect(()=>{\n fetch(\"https://corona.lmao.ninja/v3/covid-19/all\")\n   .then((response) => response.json())\n   .then((data) => {\n     setCountryInfo(data);\n   });\n },[])\n console.log(\"center\",mapCenter);\n  useEffect(()=>\n{\nconst getCountriesData=async ()=>{\n  await fetch(\"https://corona.lmao.ninja/v3/covid-19/countries\").\n  then((response)=>response.json()).\n  then((data)=>{\n    const countries=data.map((country)=>({\n      name:country.country,\n      value:country.countryInfo.iso2,\n    }));\n    const sortedData=sortData(data)\n    setcountries(countries);\n    setMapCountries(data)\n    setTableData(sortedData);\n  });\n  \n}\ngetCountriesData();\n},[])\nconst onCountryChange =async (event)=>{\n  const countryCode=event.target.value;\n  setcountry(countryCode)\n  const url = countryCode === \"Worldwide\" ? \"https://corona.lmao.ninja/v3/covid-19/all\":\n  ` https://corona.lmao.ninja/v3/covid-19/countries/${countryCode}`;\n  await fetch(url).then(response=>response.json())\n  .then((data)=>{\n    setcountry(countryCode)\n    setCountryInfo(data)\n    setMapCenter([data.countryInfo.lat,data.countryInfo.long])\n    console.log('countryinfo',mapCenter)\n    setMapZoom(4)\n  })\n}\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        <div className=\"app_header\">\n          <h2>COVID-19 TRACKER</h2>\n          <FormControl className=\"app_dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"Worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app_status\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={prettyPrintStat(countryInfo.cases)}\n            title=\"Coranovirus cases\"\n            isred={casesType === \"cases\"}\n            r\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={prettyPrintStat(countryInfo.recovered)}\n            title=\"Recovered\"\n            isgreen={casesType === \"recovered\"}\n            g\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={prettyPrintStat(countryInfo.deaths)}\n            title=\"Deaths\"\n            isgray={casesType === \"deaths\"}\n            y\n          />\n        </div>\n        <Map\n          casesType={casesType}\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3 className=\"livecases\">Live cases by country</h3>\n          <Table className=\"app_right_table\" countries={tableData} />\n        </CardContent>\n        <hr className=\"hr\"/>\n        <h3 className=\"app_right_world\">worldwide {casesType}</h3>\n        <LineGraph className=\"line\" casesType={casesType} />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/reportWebVitals.js",[],"/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/Table.js",[],"/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/LineGraph.js",[],"/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/InfoBox.js",[],"/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/Map.js",[],"/home/logesh/reacts/covid-19_Tracker/covid19_tracker/src/util.js",[],["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":31,"column":65,"nodeType":"49","messageId":"50","endLine":31,"endColumn":66,"fix":"51"},{"ruleId":"47","severity":1,"message":"48","line":32,"column":36,"nodeType":"49","messageId":"50","endLine":32,"endColumn":37,"fix":"52"},{"ruleId":"43","replacedBy":"53"},{"ruleId":"45","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"57","text":"58"},{"range":"59","text":"58"},["55"],["56"],"no-global-assign","no-unsafe-negation",[1137,1141],"\n  .",[1174,1178]]